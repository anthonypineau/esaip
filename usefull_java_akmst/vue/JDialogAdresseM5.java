/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import modele.dao.DaoVille;
import modele.dao.Jdbc;

/**
 *
 * @author btssio
 */
public class JDialogAdresseM5 extends javax.swing.JDialog {
    
    List<String> lesVilles;
    DefaultListModel listModel = new DefaultListModel();
    String cdpSelected;
    boolean villePCP=true;
    String choixCPVille;
    String choixNomVille;
    
    /**
     * Creates new form JDialogAdresseM4
     * @param parent
     * @param modal
     */
    public JDialogAdresseM5(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Ecouteur ecouteur = new Ecouteur();
        EcouteurList ecouteurList = new EcouteurList();
        jTextFieldCDP.addActionListener(ecouteur);
        jButtonValider.addActionListener(ecouteur);
        jButtonQuitter.addActionListener(ecouteur);
        jButtonAnnuler.addActionListener(ecouteur);
        jListVilles.addListSelectionListener(ecouteurList);
        jListVilles.setModel(listModel);
        jButtonChoisirVille.addActionListener(ecouteur);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCDP = new javax.swing.JLabel();
        jLabelVille = new javax.swing.JLabel();
        jTextFieldCDP = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListVilles = new javax.swing.JList<>();
        jButtonValider = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonQuitter = new javax.swing.JButton();
        jButtonChoisirVille = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelCDP.setText("CDP");

        jLabelVille.setText("Ville");

        jListVilles.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListVilles);

        jButtonValider.setBackground(new java.awt.Color(0, 153, 0));
        jButtonValider.setText("Valider");

        jButtonAnnuler.setBackground(new java.awt.Color(255, 204, 0));
        jButtonAnnuler.setText("Annuler");

        jButtonQuitter.setBackground(new java.awt.Color(204, 0, 0));
        jButtonQuitter.setText("Quitter");

        jButtonChoisirVille.setText("Choisir ville");

        jLabel1.setText("Choix ville");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonChoisirVille, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAnnuler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonValider, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jButtonQuitter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCDP)
                            .addComponent(jLabelVille))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldCDP, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1))))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCDP)
                    .addComponent(jTextFieldCDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabelVille))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonChoisirVille)
                    .addComponent(jButtonValider))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnnuler)
                    .addComponent(jButtonQuitter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogAdresseM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogAdresseM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogAdresseM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogAdresseM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogAdresseM5 dialog = new JDialogAdresseM5(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
   
    private class Ecouteur implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            
            if(e.getSource() == jButtonChoisirVille){
                choixCPVille = jTextFieldCDP.getText();
                dispose();
            }
            
            if(e.getSource() == jTextFieldCDP || e.getSource() == jButtonValider){
                if(jTextFieldCDP.getText().length()<6 && !(jTextFieldCDP.getText().equals("")) ){
                    cdpSelected = jTextFieldCDP.getText();
                    test();
                }else{
                    JOptionPane.showMessageDialog(null, "Le code postal saisi n'est pas valide");
                }
            }
            
            if(e.getSource() == jButtonAnnuler){
                jTextFieldCDP.setText("");
                listModel = new DefaultListModel();
                jListVilles.setModel(listModel);
            }
            
            if(e.getSource() == jButtonQuitter){
                dispose();
            }
        }
    }
    
    private class EcouteurList implements ListSelectionListener{
        @Override
        public void valueChanged(ListSelectionEvent e){
            if(e.getSource().equals(jListVilles)){
                if(!e.getValueIsAdjusting()){
                    String villeChoisie = jListVilles.getSelectedValue();
                    choixNomVille = jListVilles.getSelectedValue();
                    connBDD();
                    try {
                        if(villePCP){
                            String cpSelect = DaoVille.selectCPbyName(villeChoisie, cdpSelected);
                            if(cpSelect.length() > 5){
                                String cps[] = cpSelect.split("-");
                                listModel.removeAllElements();
                                for(String cp : cps){
                                    listModel.addElement(cp);
                                }
                                villePCP = false;
                            }else{
                                jTextFieldCDP.setText(cpSelect);
                            }
                        }else{
                            jTextFieldCDP.setText(jListVilles.getSelectedValue());
                            villePCP=true;
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(JDialogAdresseM5.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }
        
    private void connBDD(){
        Jdbc.creer("oracle.jdbc.driver.OracleDriver", "jdbc:oracle:thin:", "@localhost:1521:XE", "", "LABARTE", "secret");
        try {
            Jdbc.getInstance().connecter();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(JDialogAdresseM5.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection cnx = Jdbc.getInstance().getConnexion();
    }
    
    private void test(){
        connBDD();
        
        try{
            lesVilles = DaoVille.selectAllNomCP(jTextFieldCDP.getText());
        }catch(SQLException ex){
            System.err.println("Erreur SQL : " + ex);
        }
        
        listModel.removeAllElements();
        for(String nomVille : lesVilles){
            listModel.addElement(nomVille);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonChoisirVille;
    private javax.swing.JButton jButtonQuitter;
    private javax.swing.JButton jButtonValider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCDP;
    private javax.swing.JLabel jLabelVille;
    private javax.swing.JList<String> jListVilles;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCDP;
    // End of variables declaration//GEN-END:variables
}
